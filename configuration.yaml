sensor:
# Create SessionID in local network with user and password -> change ***
  - platform: rest
    resource: http://192.168.X.X/api/auth/login.json?user***&pwd=***
    name: sid_token
    value_template: '{{ value_json.SessionId }}'
    scan_interval: 86400
 # Read Datapoint comfort Temperature from OZW  
  - platform: rest
 #  name: kotel_komfortni_zadana_teplota
    name: boiler_temp_settings_comfort
    resource_template: http://192.168.X.X/api/menutree/read_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=2687
    value_template: '{{ value_json.Data.Value | float }}'
    unit_of_measurement: "°C"
    device_class: temperature
 # Read Datapoint reduced Temperature from OZW
  - platform: rest
 #   name: kotel_utlumova_zadana_teplota
    name: boiler_temp_settings_reduced    
    resource_template: http://192.168.X.X/api/menutree/read_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=2688
    value_template: '{{ value_json.Data.Value | float }}'
    unit_of_measurement: "°C"
    device_class: temperature
# Read other Datapoints ...
  - platform: rest
#    name: kotel_topna_krivka
    name: boiler_heating_curve
    resource_template: http://192.168.X.X/api/menutree/read_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=2690
    value_template: '{{ value_json.Data.Value | float }}'
    device_class: temperature
  - platform: rest
 #   name: kotel_modulace_horaku
    name: boiler_burner_modulation
    resource_template: http://192.168.X.X/api/menutree/read_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=3078
    value_template: '{{ value_json.Data.Value | float }}'
    unit_of_measurement: "%"
    device_class: temperature
  - platform: rest
 #   name: kotel_stav_horaku
    name: boiler_burner_condition
    resource_template: http://192.168.X.X/api/menutree/read_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=3062
    value_template: '{{ value_json.Data.Value }}'
    device_class: temperature
  - platform: rest
 #   name: kotel_teplota_kotle
    name: boiler_temp
    resource_template: http://192.168.X.X/api/menutree/read_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=3068
    value_template: '{{ value_json.Data.Value | float }}'
    unit_of_measurement: "°C"
    device_class: temperature
  - platform: rest
 #   name: kotel_druh_provozu  
    name: boiler_operation_type
    resource_template: http://192.168.X.X/api/menutree/read_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=2686
    value_template: '{{ value_json.Data.Value }}'
  - platform: rest
#    name: kotel_stav_kotle
    name: boiler_condition
    resource_template: http://192.168.X.X/api/menutree/read_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=3059
    value_template: '{{ value_json.Data.Value }}'
  - platform: rest
 #   name: kotel_teplota_zpatecky
    name: boiler_temp_return
    resource_template: http://192.168.X.X/api/menutree/read_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=3074
    value_template: '{{ value_json.Data.Value | float }}'
    unit_of_measurement: "°C"
    device_class: temperature
  - platform: rest
 #   name: kotel_teplota_prostoru
    name: boiler_temp_room
    resource_template: http://192.168.X.X/api/menutree/read_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=3209
    value_template: '{{ value_json.Data.Value | float }}'
    unit_of_measurement: "°C"
    device_class: temperature
  - platform: rest
 #   name: kotel_venkovni_teplota
    name: boiler_temp_outside
    resource_template: http://192.168.X.X/api/menutree/read_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=3212
    value_template: '{{ value_json.Data.Value | float }}'
    unit_of_measurement: "°C"
    device_class: temperature
 # Read datapoint Boiler failure 
  - platform: rest
 #   name: kotel_chybove_hlaseni
    name: boiler_error_message
    resource_template: http://192.168.X.X/api/menutree/read_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=3198
    value_template: '{{ value_json.Data.Value }}'
 # Read datapoint really temperature hot water 
  - platform: rest
 #   name: temp_current skutecna_teplota_TV
    name: boiler_temp_DHW
    resource_template: http://192.168.X.X/api/menutree/read_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=3215
    value_template: '{{ value_json.Data.Value }}'
    unit_of_measurement: "°C"
    device_class: temperature

# remote control commands -> write datapoint
# send comfort temperature from input_number... entit
rest_command:
  odeslatdokotleteplotu:
    url: 'http://192.168.X.X/api/menutree/write_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=2687&Type=Numeric&Value={{ states.input_number.nastaveni_teploty_kotle.state }}'
# send Reduced temperature from second input_nuber... entity
  odeslatdokotleutlumovouteplotu:
    url: 'http://192.168.X.X/api/menutree/write_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=2688&Type=Numeric&Value={{ states.input_number.utlumova_teplota_kotle.state }}'
# With send Value “Type of Operation” is little more complicated, you need “translate” text string to “enumeration value”
  odeslatdokotle_druhprovozu:
    url: >
         {% if is_state("input_select.kotel_druh_provozu", "Útlum") %}
           http://192.168.X.X/api/menutree/write_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=2686&Type=Enumeration&Value=2
         {%-elif is_state("input_select.kotel_druh_provozu", "Automatický") %}  
           http://192.168.X.X/api/menutree/write_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=2686&Type=Enumeration&Value=1
         {%-elif is_state("input_select.kotel_druh_provozu", "Komfortní") %} 
           http://192.168.X.X/api/menutree/write_datapoint.json?SessionId={{ states.sensor.sid_token.state }}&Id=2686&Type=Enumeration&Value=3
         {% else %}
              none
         {% endif %}
    
    
 
